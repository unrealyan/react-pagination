/**
 * Created by unrealyan on 16/8/11.
 */
import React, {Component, PropTypes} from "react";
var pageSum = 0;
class Pagination extends Component {
    constructor(props) {
        super(props);
        this.state = {
            currentPage: 0,
            setPageSize: 5,
            pageSize: 5,
            initialNo: 0
        }
    }


    componentWillReceiveProps(nextProps) {
        if (nextProps.pageCount != undefined) {
            this.setState({
                pageCount: parseInt(nextProps.pageCount / this.state.pageSize) + 1
            })
        }

    }

    onClick(e) {
        const {queryFunc}=this.props;
        let currentPage = parseInt(e.target.name);
        // if(currentPage!=1&&currentPage!=this.state.pageCount){
        this.setState({currentPage: currentPage + 1}, function () {
            queryFunc(this.state.pageSize, this.state.currentPage);
        });
        // }

    }

    upPage() {
        const {queryFunc}=this.props;
        if (this.state.currentPage > 1) {
            let nextPage = this.state.currentPage - 1;
            this.setState({currentPage: nextPage}, function () {
                queryFunc(this.state.pageSize, this.state.currentPage);
            });
        }
    }

    nextPage() {
        const {queryFunc}=this.props;
        if (this.state.currentPage < this.state.pageCount) {
            let nextPage = this.state.currentPage + 1;
            this.setState({currentPage: nextPage}, function () {
                queryFunc(this.state.pageSize, this.state.currentPage);
            });
        }
    }
    onChange(e){
        const {queryFunc}=this.props;
        this.setState({
            currentPage: e.target.value
        }, function () {
            queryFunc(this.state.pageSize, this.state.currentPage);
        });
    }

    setPageSize(e) {
        const {queryFunc}=this.props;
        this.setState({
            currentPage: 1,
            pageSize: e.target.value
        }, function () {
            queryFunc(this.state.pageSize, this.state.currentPage);
        });
    }

    render(){
        let items=[];

        for(let i=0;i<this.state.pageCount;i++){
            items.push(i)
        }

        return (
            <nav>
                <ul className="pagination">
                    <li className={this.state.currentPage<=1?"disabled":""} style={{cursor: 'pointer '}}>
                        <a onClick={this.upPage.bind(this)} aria-label="Previous"><span aria-hidden="true">上一页</span></a></li>
                    {items.map((value,key)=>{
                        if((key+1)<5){
                            return (
                                <li className={this.state.currentPage==(key+1)?"active":""} style={{cursor: 'pointer '}}>
                                    <a name={value} onClick={this.onClick.bind(this)}>{value+1} <span className="sr-only">(current)</span>
                                    </a>
                                </li>
                            )
                        }else if((key+1)>5&&(key+1)<(this.state.pageCount-1)){
                            return(
                                ""
                            )
                        }else if((key+1)==(this.state.pageCount-1)){
                            return(
                                <li className="disabled" style={{cursor: 'default'}}>
                                    <a name={value} onClick={this.onClick.bind(this)}>...<span className="sr-only">(current)</span>
                                    </a>
                                </li>
                            )
                        }else if((key+1)==this.state.pageCount){
                            return(
                                <li className={this.state.currentPage==(key+1)?"active":""} style={{cursor: 'pointer '}}>
                                    <a name={value} onClick={this.onClick.bind(this)}>{this.state.pageCount}<span className="sr-only">(current)</span>
                                    </a>
                                </li>
                            )
                        }

                    })}
                    <li style={{cursor: 'default'}}>
                        <a>跳转至
                            <input onChange={this.onChange.bind(this)} type="text"style={{height:"auto",fontSize:"12px",padding:"auto",lineHeight:"12px",width:"25px"}}/>页
                        </a>
                    </li>
                    <li style={{cursor: 'default'}}>
                        <a>每页显示
                            <select style={{height:"auto",fontSize:"12px",padding:"auto"}}
                                    onChange={this.setPageSize.bind(this)}>
                                <option value="5">5</option>
                                <option value="10">10</option>
                                <option value="50">50</option>
                            </select>条
                        </a>
                    </li>
                    <li className={this.state.currentPage>=this.state.pageCount?"disabled":""} style={{cursor: 'pointer '}}>
                        <a onClick={this.nextPage.bind(this)} aria-label="Previous"><span aria-hidden="true">下一页</span></a>
                    </li>
                </ul>
            </nav>
        )
    }
}
Pagination.propTypes = {
    pageSize: PropTypes.number.isRequired,
    pageCount: PropTypes.number.isRequired,
    queryFunc: PropTypes.func.isRequired,
    currentPage: PropTypes.number.isRequired
};
Pagination.defaultProps = {};


export default Pagination;
